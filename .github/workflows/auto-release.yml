---
name: Auto Release

on:
  push:
    branches: [main]
    paths:
      - 'youtube-speed-control.user.js'

permissions:
  contents: write

jobs:
  check-and-release:
    name: Check Version and Auto Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Validate userscript syntax
        id: validate_script
        run: |
          if ! grep -q "// ==UserScript==" youtube-speed-control.user.js; then
            echo "Error: Invalid userscript format - missing UserScript header"
            exit 1
          fi
          if ! grep -q "// ==/UserScript==" youtube-speed-control.user.js; then
            echo "Error: Invalid userscript format - missing UserScript footer"
            exit 1
          fi
          echo "✅ Userscript format validation passed"

      - name: Extract version from userscript
        id: extract_version
        run: |
          VERSION=$(grep -o "// @version.*" youtube-speed-control.user.js | sed 's/\/\/ @version[[:space:]]*//')
          if [ -z "$VERSION" ]; then
            echo "Error: Unable to extract version from userscript"
            exit 1
          fi
          if ! echo "$VERSION" | grep -E '^[0-9]+\.[0-9]+(\.[0-9]+)?$'; then
            echo "Error: Version $VERSION is not in semantic versioning format"
            exit 1
          fi
          TAG="v$VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
          echo "TAG=$TAG" >> $GITHUB_OUTPUT
          echo "Detected version: $TAG"

      - name: Check if tag exists
        id: check_tag
        run: |
          TAG="${{ steps.extract_version.outputs.TAG }}"
          if git rev-parse "$TAG" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_OUTPUT
            echo "Tag $TAG already exists"
          else
            echo "TAG_EXISTS=false" >> $GITHUB_OUTPUT
            echo "Tag $TAG does not exist, will create new release"
          fi

      - name: Create tag
        if: steps.check_tag.outputs.TAG_EXISTS == 'false'
        run: |
          TAG="${{ steps.extract_version.outputs.TAG }}"
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git tag -a "$TAG" -m "Release $TAG - Auto-generated from userscript version"
          git push origin "$TAG"
          echo "Created and pushed tag $TAG"

      - name: Extract changelog from README
        id: extract_changelog
        run: |
          TAG="${{ steps.extract_version.outputs.TAG }}"
          VERSION="${{ steps.extract_version.outputs.VERSION }}"
          CHANGELOG=$(awk '/- \*\*'"${VERSION}"'\*\*/{p=NR+2}(NR<=p){print}' README.md)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Validate release assets
        run: |
          if [ ! -f "youtube-speed-control.user.js" ]; then
            echo "Error: youtube-speed-control.user.js not found"
            exit 1
          fi
          if [ ! -f "LICENSE" ]; then
            echo "Error: LICENSE file not found"
            exit 1
          fi
          echo "✅ All required release assets found"

      - name: Create or Update Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.extract_version.outputs.TAG }}
          name: Release ${{ steps.extract_version.outputs.TAG }}
          body: |
            # Changelog
            ${{ steps.extract_changelog.outputs.CHANGELOG }}

            # Installation
            1. Install [Tampermonkey](https://www.tampermonkey.net/)
            2. [Install Script](https://github.com/landrarwolf/youtube-speed-control/releases/download/${{ steps.extract_version.outputs.TAG }}/youtube-speed-control.user.js)
          files: |
            youtube-speed-control.user.js
            LICENSE
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
